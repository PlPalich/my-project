// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package graph

type Article struct {
	ID         string     `json:"id"`
	Name       string     `json:"name"`
	Author     *User      `json:"author"`
	Content    string     `json:"content"`
	CanComment *bool      `json:"canComment,omitempty"`
	Comments   []*Comment `json:"Comments,omitempty"`
}

type Comment struct {
	ID            string     `json:"id"`
	Author        *User      `json:"author"`
	Content       string     `json:"content"`
	ChildComments []*Comment `json:"childComments,omitempty"`
	ParentComment *Comment   `json:"parentComment,omitempty"`
	ParentArticle *Article   `json:"parentArticle"`
}

type Mutation struct {
}

type NewArticle struct {
	Name       string `json:"name"`
	UserID     string `json:"userID"`
	UserName   string `json:"userName"`
	Content    string `json:"content"`
	CanComment *bool  `json:"canComment,omitempty"`
}

type NewComment struct {
	UserID          string  `json:"userID"`
	Content         string  `json:"content"`
	ParentArticleID string  `json:"parentArticleID"`
	ParentCommentID *string `json:"parentCommentID,omitempty"`
}

type NewSubscription struct {
	UserID    string `json:"userID"`
	ArticleID string `json:"articleID"`
}

type Query struct {
}

type Subscription struct {
}

type SwitchCommentsAbility struct {
	UserID     string `json:"userID"`
	ArticleID  string `json:"articleID"`
	CanComment bool   `json:"canComment"`
}

type User struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}
